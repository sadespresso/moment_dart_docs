"use strict";(self.webpackChunkmoment_dart_docs=self.webpackChunkmoment_dart_docs||[]).push([[5354],{1675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>m,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"creating-localization","title":"Implementing localization","description":"You can extend MomentLocalization class to implement localization for","source":"@site/versioned_docs/version-3.3.2/creating-localization.md","sourceDirName":".","slug":"/creating-localization","permalink":"/moment_dart_docs/3.3.2/creating-localization","draft":false,"unlisted":false,"editUrl":"https://github.com/sadespresso/moment_dart_docs/tree/main/versioned_docs/version-3.3.2/creating-localization.md","tags":[],"version":"3.3.2","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"id":"creating-localization"}}');var o=t(3274),i=t(3114);const r={sidebar_position:10,id:"creating-localization"},m="Implementing localization",d={},l=[{value:"Example implementation",id:"example-implementation",level:2},{value:"Example usage of mixins",id:"example-usage-of-mixins",level:2}];function s(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"implementing-localization",children:"Implementing localization"})}),"\n",(0,o.jsxs)(n.p,{children:["You can extend ",(0,o.jsx)(n.code,{children:"MomentLocalization"})," class to implement localization for\nyour own language. Majority of the functionalities are defined as ",(0,o.jsx)(n.strong,{children:"methods"}),",\nallowing developers to acheive unique features of their language."]}),"\n",(0,o.jsxs)(n.p,{children:["Best way to implement a new localization is to copy ",(0,o.jsx)(n.code,{children:"en_US"}),", or a localization\nthat is similar to your language, then make modifications."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"MomentLocalization"})," relies heavily on ",(0,o.jsx)(n.a,{href:"https://dart.dev/language/mixins",children:"Mixins"})]}),"\n",(0,o.jsx)(n.h2,{id:"example-implementation",children:"Example implementation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'import \'package:moment_dart/src/formatters/token.dart\';\nimport \'package:moment_dart/src/calendar.dart\';\nimport \'package:moment_dart/src/localizations.dart\';\n\nclass LocalizationEnMeowKC extends MomentLocalization {\n  @override\n  CalenderLocalizationData get calendarData => CalenderLocalizationData(\n        keywords: CalenderLocalizationKeywords(\n          at: (date, time) => "meow $time",\n          lastWeekday: (weekday) => "Last meow $weekday",\n          nextWeekday: (weekday) => weekday,\n        ),\n        relativeDayNames: {\n          -1: "Yestermeow",\n          0: "Meowday",\n          1: "Tomeowow",\n        },\n      );\n\n  @override\n  String? get countryCode => "KC"; // Kingdom of Cats\n\n  @override\n  String get endonym => "Meow!";\n\n  @override\n  String get languageCode => "en";\n\n  @override\n  String get languageNameInEnglish => "Meowlish!";\n\n  @override\n  String get locale => "en_Meow_KC"; // You may want to override this one\n\n  @override\n  Map<FormatterToken, FormatterTokenFn?> overrideFormatters() => {\n        // Localization aware formats - Highly recommend implementing these :)\n        FormatterToken.L: (dateTime) => reformat(dateTime, "YYYY/MM/DD"),\n        FormatterToken.l: (dateTime) => reformat(dateTime, "YYYY/M/D"),\n        FormatterToken.LL: (dateTime) =>\n            reformat(dateTime, "MMMM D, [meow] YYYY"),\n        FormatterToken.ll: (dateTime) =>\n            reformat(dateTime, "MMM D, [meow] YYYY"),\n        FormatterToken.LLL: (dateTime) =>\n            reformat(dateTime, "MMMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.lll: (dateTime) =>\n            reformat(dateTime, "MMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.LLLL: (dateTime) =>\n            reformat(dateTime, "dddd, MMMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.llll: (dateTime) =>\n            reformat(dateTime, "ddd, MMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.LT: (dateTime) => reformat(dateTime, "HH:mm"),\n        FormatterToken.LTS: (dateTime) => reformat(dateTime, "HH:mm:ss"),\n      };\n\n  @override\n  String relative(Duration duration, [bool dropPrefixOrSuffix = false]) =>\n      "(in) Meow $duration (ago)";\n\n  @override\n  Map<int, String> get weekdayName => {\n        DateTime.monday: "Meowday #1",\n        ...,\n        DateTime.sunday: "Meowday #7",\n      };\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"example-usage-of-mixins",children:"Example usage of mixins"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'class MewLocale extends MomentLocalization with Ordinal, MonthNames {\n  /* ... folded code ... */\n\n  @override\n  Map<int, String> get monthNames => {\n    DateTime.january: "Janmeow",\n    ...,\n    DateTime.december: "Decemeow",\n  };\n\n  @override\n  Map<int, String> get monthNamesShort => monthNames.map((key, value) => MapEntry(key, value.substring(0,3)));\n\n  @override\n  String ordinalNumber(int n) => "meow $n\xba";\n\n  @override\n  Map<FormatterToken, FormatterTokenFn?> overrideFormatters() => {\n        // From [EnglishLikeOrdinal] mixin\n        ...formattersWithOrdinal, // Provided by mixin `Ordinal`\n        // From [MonthNames] mixin\n        ...formattersForMonthNames, // Provided by mixin MonthNames\n        \n        /* Other formatters */\n      };\n}\n'})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},3114:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>m});var a=t(9474);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmoment_dart_docs=self.webpackChunkmoment_dart_docs||[]).push([[868],{4732:(e,n,t)=>{t.d(n,{Iu:()=>c,yg:()=>u});var a=t(9100);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),s=d(t),g=o,u=s["".concat(l,".").concat(g)]||s[g]||p[g]||r;return t?a.createElement(u,i(i({ref:n},c),{},{components:t})):a.createElement(u,i({ref:n},c))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=g;var m={};for(var l in n)hasOwnProperty.call(n,l)&&(m[l]=n[l]);m.originalType=e,m[s]="string"==typeof e?e:o,i[1]=m;for(var d=2;d<r;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2660:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>m,toc:()=>d});var a=t(4731),o=(t(9100),t(4732));const r={sidebar_position:10,id:"creating-localization"},i="Implementing localization",m={unversionedId:"creating-localization",id:"creating-localization",title:"Implementing localization",description:"You can extend MomentLocalization class to implement localization for",source:"@site/docs/creating-localization.md",sourceDirName:".",slug:"/creating-localization",permalink:"/moment_dart_docs/creating-localization",draft:!1,editUrl:"https://github.com/sadespresso/moment_dart_docs/tree/main/docs/creating-localization.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,id:"creating-localization"},sidebar:"docs",previous:{title:"Global Localization",permalink:"/moment_dart_docs/global-localization"},next:{title:"Common mishaps",permalink:"/moment_dart_docs/common-mishaps"}},l={},d=[{value:"Example implementation",id:"example-implementation",level:2},{value:"Example usage of mixins",id:"example-usage-of-mixins",level:2}],c={toc:d},s="wrapper";function p(e){let{components:n,...t}=e;return(0,o.yg)(s,(0,a.c)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"implementing-localization"},"Implementing localization"),(0,o.yg)("p",null,"You can extend ",(0,o.yg)("inlineCode",{parentName:"p"},"MomentLocalization")," class to implement localization for\nyour own language. Majority of the functionalities are defined as ",(0,o.yg)("strong",{parentName:"p"},"methods"),",\nallowing developers to acheive unique features of their language."),(0,o.yg)("p",null,"Best way to implement a new localization is to copy ",(0,o.yg)("inlineCode",{parentName:"p"},"en_US"),", or a localization\nthat is similar to your language, then make modifications."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"MomentLocalization")," relies heavily on ",(0,o.yg)("a",{parentName:"p",href:"https://dart.dev/language/mixins"},"Mixins")),(0,o.yg)("h2",{id:"example-implementation"},"Example implementation"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-dart"},'import \'package:moment_dart/src/formatters/token.dart\';\nimport \'package:moment_dart/src/calendar.dart\';\nimport \'package:moment_dart/src/localizations.dart\';\n\nclass LocalizationEnMeowKC extends MomentLocalization {\n  @override\n  CalenderLocalizationData get calendarData => CalenderLocalizationData(\n        keywords: CalenderLocalizationKeywords(\n          at: (date, time) => "meow $time",\n          lastWeekday: (weekday) => "Last meow $weekday",\n          nextWeekday: (weekday) => weekday,\n        ),\n        relativeDayNames: {\n          -1: "Yestermeow",\n          0: "Meowday",\n          1: "Tomeowow",\n        },\n      );\n\n  @override\n  String? get countryCode => "KC"; // Kingdom of Cats\n\n  @override\n  String get endonym => "Meow!";\n\n  @override\n  String get languageCode => "en";\n\n  @override\n  String get languageNameInEnglish => "Meowlish!";\n\n  @override\n  String get locale => "en_Meow_KC"; // You may want to override this one\n\n  @override\n  Map<FormatterToken, FormatterTokenFn?> overrideFormatters() => {\n        // Localization aware formats - Highly recommend implementing these :)\n        FormatterToken.L: (dateTime) => reformat(dateTime, "YYYY/MM/DD"),\n        FormatterToken.l: (dateTime) => reformat(dateTime, "YYYY/M/D"),\n        FormatterToken.LL: (dateTime) =>\n            reformat(dateTime, "MMMM D, [meow] YYYY"),\n        FormatterToken.ll: (dateTime) =>\n            reformat(dateTime, "MMM D, [meow] YYYY"),\n        FormatterToken.LLL: (dateTime) =>\n            reformat(dateTime, "MMMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.lll: (dateTime) =>\n            reformat(dateTime, "MMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.LLLL: (dateTime) =>\n            reformat(dateTime, "dddd, MMMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.llll: (dateTime) =>\n            reformat(dateTime, "ddd, MMM D, [meow] YYYY, HH:mm [meow!]"),\n        FormatterToken.LT: (dateTime) => reformat(dateTime, "HH:mm"),\n        FormatterToken.LTS: (dateTime) => reformat(dateTime, "HH:mm:ss"),\n      };\n\n  @override\n  String relative(Duration duration, [bool dropPrefixOrSuffix = false]) =>\n      "(in) Meow $duration (ago)";\n\n  @override\n  Map<int, String> get weekdayName => {\n        DateTime.monday: "Meowday #1",\n        ...,\n        DateTime.sunday: "Meowday #7",\n      };\n}\n')),(0,o.yg)("h2",{id:"example-usage-of-mixins"},"Example usage of mixins"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-dart"},'class MewLocale extends MomentLocalization with Ordinal, MonthNames {\n  /* ... folded code ... */\n\n  @override\n  Map<int, String> get monthNames => {\n    DateTime.january: "Janmeow",\n    ...,\n    DateTime.december: "Decemeow",\n  };\n\n  @override\n  Map<int, String> get monthNamesShort => monthNames.map((key, value) => MapEntry(key, value.substring(0,3)));\n\n  @override\n  String ordinalNumber(int n) => "meow $n\xba";\n\n  @override\n  Map<FormatterToken, FormatterTokenFn?> overrideFormatters() => {\n        // From [EnglishLikeOrdinal] mixin\n        ...formattersWithOrdinal, // Provided by mixin `Ordinal`\n        // From [MonthNames] mixin\n        ...formattersForMonthNames, // Provided by mixin MonthNames\n        \n        /* Other formatters */\n      };\n}\n')))}p.isMDXComponent=!0}}]);